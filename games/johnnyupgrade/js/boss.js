var boss; var fxLoop; function iniBoss(){boss = isprt.create(2635, 2592, 'sheetBoss'); sprt.parent.setChildIndex(boss, sprt.z); boss.animations.add('idle', [0,1,2,3,4,5], 6); boss.animations.add('spawn', [6,7,8,9,10,11,12,13], 3); boss.animations.add('round', [14,15], 6); boss.animations.add('dd', [16,17,18,19,20,21,22], 16); boss.animations.add('fall', [23,24,25,26], 6); boss.anchor.setTo(0.5, 1); boss.boss = true; boss.stp = -1; boss.pauseAnis = false; sprt.x += 300; boss.ct = 0; boss.si = 0; boss.kol = {l:-170, t:-290, r:170, b:-4}; spikes.push(boss); boss.ymax = bossData.range.b; boss.xmin = bossData.range.l + boss.width / 2; boss.xmax = bossData.range.r - boss.width / 2; boss.gun1 = addBossGun(-190,-150); boss.gun2 = addBossGun(190,-150); boss.gun1.spd = 3; boss.gun2.spd = 3; boss.gun1.dir = -2; boss.gun2.dir = 2; boss.guns = [boss.gun1,boss.gun2]; boss.bul = []; boss.moves = [bossMove0, bossMove1, bossMove2, bossMove3, bossMove4, bossMove5, bossMove6, bossMove7]; boss.bulletSpd = 0; boss.grav = 0; boss.xx = -5; boss.nrgMax = 2; boss.nrg = boss.nrgMax; game.door.ymax = 1810; plats.push(game.door); boss.sani = 'spawn'; } function addBossPowBar(){dsp.bossPWR = dsp.create(levelScreenWidth - 60, 100); var sc = dsp.bossPWR.addChild(game.make.sprite(0,0, 'bossPowScale')); var mask = game.add.graphics(10, 0); mask.beginFill(0xffffff); dsp.bossPWR.addChild(mask); mask.drawRect(0, 5, 20, 52); sc.mask = mask; boss.powBar = mask; boss.hmax = 52; dsp.bossPWR.addChild(game.make.sprite(0,0, 'bossPowBorder')); dsp.bossPWR.visible = false; } function addBossGun(xx,yy){var gun = boss.addChild(game.make.sprite(xx, yy, 'sheetBossGun')); gun.animations.add('fire', null, 60); gun.animations.add('spawn', null, 24); gun.angle = 90; gun.play('spawn',null,true); gun.anchor.setTo(0.5); return gun; } function bossCode() {if (boss.stp < 0) {boss.pauseAnis = true; bossSleep(); return; } boss.ct += 0.5; boss.moves[boss.stp](); boss.kol = {l:-170, t:-290, r:170, b:-4}; getBoundsByOffset(boss, boss.kol); bossBulletCode(); bossSaniCode(); bossPWR(); } function bossPWR() {boss.powBar.y = boss.hmax - boss.nrg / boss.nrgMax * boss.hmax; } function bossSleep() {if (sprt.dd){return;} if (sprtHitTest(bossData.gate)){muPlay('muBoss',0.8,true); sprt.noControl = true; sprt.gateRun = true; } if (sprt.gateRun){sprt.xx = 7; } if (sprtHitTest(bossData.range)){loopStart(sfx.fxSpawnLoop); dsp.bossPWR.visible = true; boss.stp = 0; sprt.gateRun = false; sprt.xx = 0; } } function bossMove0(){if (boss.y > boss.ymax) {introSteam(); } loopStart(sfx.fxSpawnLoop); doorCode(); boss.gun1.play(); boss.gun2.play(); boss.y -=  1.5; boss.x = sprt.x + 280; world.q = 20; isprt.noScroll = true; game.camera.x += (boss.x + (sprt.x - boss.x) * 0.5 - 400 - game.camera.x) / 44; game.camera.y += (sprt.y - sprt.area.centerY - game.camera.y + sprt.yy * 4) / 12; scrollLimit(); bgCode(); if (!boss.eyeOpened && boss.y < 2400) {boss.eyeOpened = true; boss.animations.currentAnim.paused = false; boss.animations.currentAnim.play(); } if (boss.y < 2040) {isprt.noScroll = false; fxPlay(sfx.fxBomb1); sfx.fxBomb1.volume = 0.2; loopStop(); boss.gun1.play('fire',null,false); boss.gun2.play('fire',null,false); boss.dd = 0; boss.ct = 0; boss.stp = 1; sprt.noControl = false; boss.pauseAnis = false; boss.sani = "idle"; boss.animations.currentAnim.paused = false; boss.animations.currentAnim.play(); } } function loopStart(n){if(!fxLoop){fxLoop = n; fxPlay(fxLoop); } } function loopStop(){if(fxLoop){fxLoop.stop(); fxLoop = null; } } function bossMove1(){boss.bulletSpd = 6; if (boss.ct % 120 == 60) {boss.gun1.fire = 1; } if (boss.ct % 120 == 118) {boss.gun2.fire = 1; } boss.x +=  boss.xx; bossLimitX(); bossFollowY(); bossGunCode(boss.gun1,sprt,true); bossGunCode(boss.gun2,sprt,true); if (boss.ct > 180) {boss.ct = 0; boss.stp = 2; } } function bossMove2() {boss.bulletSpd = 6; if (boss.ct % 120 == 60) {boss.gun1.fire = 1; } if (boss.ct % 120 == 1) {boss.gun2.fire = 1; } bossFollowX(); bossLimitX(); bossFollowY(); bossGunCode(boss.gun1,sprt,true); bossGunCode(boss.gun2,sprt,true); if (boss.ct > 230) {boss.ct = 0; inibossMove3(); boss.stp = 3; boss.sani = "round"; loopStart(sfx.fxBossShootLoop); } } function inibossMove3(){boss.gun1.angle = 0; boss.gun2.angle = 180; boss.xx = 6; } function bossMove3(){loopStart(sfx.fxBossShootLoop); boss.bulletSpd = 6; if (boss.ct % 5 == 1){boss.gun1.fire = 1; } if (boss.ct % 5 == 3){boss.gun2.fire = 1; } if (boss.gun1.angle < 60 || boss.gun1.angle > 90){boss.gun1.angle +=  boss.gun1.dir; boss.gun2.angle +=  boss.gun2.dir; } else{boss.x +=  boss.xx; bossLimitX(); } bossFollowY(); bossGunCode(boss.gun1,sprt,false); bossGunCode(boss.gun2,sprt,false); if (boss.ct > 300){loopStop(); boss.ct = 0; boss.stp = 4; boss.grav = -15; boss.xx = 5; boss.sani = "fall"; } } function bossMove4() {if (boss.ct < 30) {boss.ctwait = 0; return; } boss.y +=  boss.grav; boss.grav +=  0.5; if (boss.y > boss.ymax) {if(boss.ctwait <= 0) {fxPlay(sfx.fxQuake); } boss.grav = 1; boss.y = boss.ymax; boss.ctwait++; if (boss.ctwait < 10) {world.q = 30; } if (boss.ctwait > 50) {boss.stp = 1; world.q = 4; boss.sani = "idle"; } } } function bossMove5(){if (boss.ct % 8 == 1) {boss.tint = 0xFF8800; } if (boss.ct % 8 == 4) {boss.tint = 0xFFFFFF; } if (boss.ct > 10) {boss.y +=  boss.grav; boss.grav = -2; if (boss.ct > 80) {boss.tint = 0xFFFFFF; boss.sani = "idle"; boss.ct = 0; boss.grav = 0; boss.stp = 1; } } } function bossMove6(){if (boss.ct % 11 == 1) {fxPlay(sfx.fxBomb1); sfx.fxBomb1.volume = Math.random() * 0.6 + 0.4; boss.tint = 0xFF8800; } if (boss.ct % 11 == 6) {fxPlay(sfx.fxBomb2); sfx.fxBomb2.volume = Math.random() * 0.6 + 0.4; boss.tint = 0xFFFFFF; } boss.dd = 1; dsp.visible = false; sprt.noControl = true; if (boss.ct % 3 == 1) {bossFaceExplo(1); } isprt.noScroll = true; game.camera.x += (boss.x - 400 - game.camera.x)/16; game.camera.y += (boss.y - 400 - game.camera.y)/16; scrollLimit(); bgCode(); if (boss.ct > 100) {boss.ct = 20; boss.stp = 7; spawnbossPar(boss.x,boss.y); bossFaceExplo(24); boss.visible = false; } } function spawnbossPar(xx,yy){for (var i = 0; i < 17; i++){var parMC = isprt.create(xx, yy, 'sheetBossSplatter'); parMC.anchor.setTo(0.5); parMC.frame = i; parMC.x = xx + Math.random() * 120 - 60; parMC.y = yy + Math.random() * -100; parMC.xx = Math.random() * 20 - 10; parMC.yy = Math.random() * -20 - 10; parMC.rot = Math.random() * 60 - 30; pars.push(parMC); } } function bossMove7() {if (boss.ct > 50) {boss.dd = 2; } if (boss.ct > 66){isprt.noScroll = false; } if (!isprt.go && boss.ct > 99) {sprt.play('strike',null,false); isprt.go = true; fxPlay(sfx.fxYes); } if (boss.ct > 150) {levl = -9; newState(); } } function bossHit(p){if (boss.stp != 4) {return; } boss.play('dd',null,true); boss.sani = 'dd'; boss.inv = 1; boss.stp = 5; boss.ct = 0; boss.grav = 0; var e = isprt.create(p.x, p.y, 'sheetExplo1'); e.animations.add('idle', null, 24); e.play('idle',null,false,true); e.anchor.setTo(0.5); e.scale.x = e.scale.y = Math.random() * 0.3 + 0.5; bossFaceExplo(6); boss.nrg -=  game.ldat.gunpow.v; boss.powBar.y = boss.hmax - boss.nrg / boss.nrgMax * boss.hmax; fxPlay(sfx.fxBomb2); if (boss.nrg <= 0) {dsp.bossPWR.visible = false; boss.stp = 6; } } function bossFaceExplo(a) {for (var i = 0; i < a; i++){var e = isprt.create(boss.x + Math.random() * 400 - 200, boss.y - Math.random() * 300, 'sheetExplo2'); e.animations.add('idle', null, 24); e.play('idle',null,false,true); e.animations.currentAnim.setFrame(Math.floor(Math.random()*6), true); e.anchor.setTo(0.5); e.angle = Math.random() * 360; e.scale.x = e.scale.y = Math.random() * 0.8 + 0.3; } } function doorCode() {if(game.door.done){return;} game.door.y +=  1; if (game.door.y > game.door.ymax) {getBoundsByOffset(game.door, {l:0,t:0,r:100,b:250}); game.door.y = game.door.ymax; game.door.done = true; } } function introSteam(){var e = isprt.create(boss.x + Math.random() * 400 - 200, boss.ymax, 'sheetExplo2'); e.animations.add('idle', null, 24); e.play('idle',null,false,true); e.animations.currentAnim.setFrame(Math.floor(Math.random()*6), true); e.anchor.setTo(0.5); boss.parent.setChildIndex(e, boss.z + 1); e.scale.x = e.scale.y = Math.random() * 0.6 + 0.3; } function bossFollowX() {if (sprt.x + 20 > boss.x) {boss.xx +=  0.3; } if (sprt.x - 20 < boss.x) {boss.xx -=  0.3; } boss.xx *=  0.98; boss.x +=  boss.xx; } function bossLimitX(){if (boss.x < boss.xmin) {boss.x = boss.xmin; if (boss.stp == 1 || boss.stp == 3) {boss.xx *=  -1; } } if (boss.x > boss.xmax) {boss.x = boss.xmax; if (boss.stp == 1 || boss.stp == 3) {boss.xx *=  -1; } } } function bossGunCode(gun,tgt,follow){if (follow) {elRotato(gun,tgt); } if (gun.fire) {gun.fire = null; bossBulletSpawn(gun, gun.angle); gun.play('fire',null,false); } } function elRotato(gun,tgt){var yd = tgt.y - Math.round(boss.y + gun.y) - 50; var xd = tgt.x - Math.round(boss.x + gun.x); var rot = Math.atan2(yd, xd) / Math.PI * 180; gun.angle += (rot - gun.angle)/18; } function bossBulletSpawn(gun, rot){if (boss.stp != 3) {fxPlay(sfx.fxBossShoot); } var spd = boss.bulletSpd; var xb = Math.PI * rot / 180; var xd = Math.cos(xb); var yd = Math.sin(xb); var b = isprt.create(boss.x + gun.x + xd * 90, boss.y + gun.y + yd * 90, 'sheetBossBullet'); b.animations.add('idle', null, 6); b.play('idle',null,true); b.anchor.setTo(0.5); boss.parent.setChildIndex(b, boss.z + 1); b.xx = xd * spd; b.yy = yd * spd; b.bossbullet = true; boss.bul.push(b); b.kol = {l:-12, t:-12, r:12, b:12}; spikes.push(b); } function bossBulletCode() {for (var i = 0; i < boss.bul.length; i++) {var b = boss.bul[i]; b.x +=  b.xx; b.y +=  b.yy; getBoundsByOffset(b, b.kol); for (var ii = 0; ii < plats.length; ii++) {var w = plats[ii]; if (hitTestAB(b,w)){fxPlay(sfx.fxBoulder); b.dd = 1; break; } } if (b.dd) {var bdd = isprt.create(b.x, b.y, 'sheetBossBulletDD'); bdd.animations.add('idle', null, 16); bdd.play('idle',null,false,true); bdd.anchor.setTo(0.5); sprt.parent.setChildIndex(bdd, sprt.z); b.destroy(); boss.bul.splice(i,1); spikes.splice(spikes.indexOf(b),1); i--; } } } function bossSaniCode() {if (boss.sani != boss.animations.name) {boss.play(boss.sani,null,false); boss.animations.currentAnim.paused = boss.pauseAnis; } } function bossFollowY() {if(sprt.dd){return;} boss.y += (sprt.y - 200 - boss.y) / 6; boss.si +=  0.05; boss.y +=  Math.sin(boss.si) * 1; }